package models;
// Generated Jun 23, 2015 12:50:21 AM by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.List;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 * Admin generated by hbm2java
 */
public class Admin  implements java.io.Serializable {
     private int adminId;
     private String email;
     private String password;
     private String phone;
     private String role;
     private String gender;

    public Admin() {
    }

	
    public Admin(int adminId) {
        this.adminId = adminId;
    }
    public Admin(int adminId, String email, String password, String phone, String role, String gender) {
       this.adminId = adminId;
       this.email = email;
       this.password = password;
       this.phone = phone;
       this.role = role;
       this.gender = gender;
    }
   
    public int getAdminId() {
        return this.adminId;
    }
    
    public void setAdminId(int adminId) {
        this.adminId = adminId;
    }
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }
    public String getRole() {
        return this.role;
    }
    
    public void setRole(String role) {
        this.role = role;
    }
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }


   public void addBook(Book book){
           
            Session session = hibernateUtil.HibernateUtil.openSession(); 
            // 4. Starting Transaction
            Transaction transaction = session.beginTransaction();
            session.save(book);
            transaction.commit();
            session.close();
    }
     public boolean bookIssue(models.Bookissue issue){
         Session session=hibernateUtil.HibernateUtil.openSession();
         Transaction tr=session.beginTransaction();
         session.save(issue);
         tr.commit();
         session.close();
         return true;
     }
     public boolean bookReturn(int id){
            Session session=hibernateUtil.HibernateUtil.openSession();
            Transaction transaction=session.beginTransaction();        
             Book book=(Book)session.get(Book.class, id);                               
             book.setCopy(book.getCopy()+1);             
             session.update(book);
             transaction.commit();
          return true;
     }

        //method adminAuthenticate to authenticate whether the user is an authorized admin
    public Admin authenticate(String username, String password){
        Session session = hibernateUtil.HibernateUtil.openSession();
        Transaction transaction = session.beginTransaction();
        Query q=session.createQuery("from Admin where Email='"+username+"' and Password='"+password+"'");
        Admin regis=(Admin)q.uniqueResult();
        
        if(regis !=null) {           
            return regis;
        }else       
        return null;
    }   //finished method authenticate

        public List<Bookissue> unreturnedBooks(){
             Session session=hibernateUtil.HibernateUtil.openSession();
             Transaction transaction=session.beginTransaction();  
             Query query=session.createQuery("from Bookissue where Status='no'");
             List<Bookissue> bookList=(List<Bookissue>)query.list();
             
             return bookList;
        }
        public List<Bookissue> returnedBooks(){
             Session session=hibernateUtil.HibernateUtil.openSession();
             Transaction transaction=session.beginTransaction();  
             Query query=session.createQuery("from Bookissue where Status='yes'");
             List<Bookissue> bookList=(List<Bookissue>)query.list();
             
             return bookList;
        }
        


     
     public List<Bookissue> searchByEmail(String email){
        Session session=hibernateUtil.HibernateUtil.openSession();
        Transaction transaction=null;
        session.beginTransaction();
        Query query=session.createQuery("from Bookissue where Email='"+email+"' and Status='no'");
        List<Bookissue> bookList=(List<Bookissue>)query.list();
        session.getTransaction().commit();
        session.close();               
        return bookList;
 
     }

        public Bookissue getBooksByIssueId(int id){
        Session session=hibernateUtil.HibernateUtil.openSession();
        Transaction transaction=null;
        session.beginTransaction();       
        Bookissue b  =(Bookissue) session.get(Bookissue.class, id);                              
        return b;
    }
        public void changeStatus(int issueId, String dueDate){
             Session session=hibernateUtil.HibernateUtil.openSession();
             Transaction transaction=session.beginTransaction();        
             Bookissue issuedBook=(Bookissue)session.get(Bookissue.class, issueId);                               
             issuedBook.setStatus("yes");
             issuedBook.setDueDate(new Date());
             session.update(issuedBook);
             transaction.commit();              
        }
        
        public boolean deleteMember( int id){
           boolean result=false;
            Session session=hibernateUtil.HibernateUtil.openSession();
            Transaction transaction=session.beginTransaction();        
             models.Member book=(models.Member)session.get(models.Member.class, id);     
             if(book !=null){
                 result=true;
                  session.delete(book);
                  transaction.commit();
             }
             return result;
        }

}


